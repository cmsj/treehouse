dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/treehouse.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(Treehouse, 0.0.16)

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)

AC_ISC_POSIX
AC_PROG_CC
AC_HEADER_STDC
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

GNOME_INIT

GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS

ALL_LINGUAS=""
AM_GNOME_GETTEXT

dnl Subst PACKAGE_PIXMAPS_DIR.
PACKAGE_PIXMAPS_DIR="`gnome-config --datadir`/pixmaps/${PACKAGE}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Check for libglade
AC_MSG_CHECKING(for Glade libraries >= 0.11)
if libglade-config --libs > /dev/null 2>&1; then
    vers=`libglade-config --version | awk 'BEGIN { FS = "."; } { print $1 * 1000 + $2;}'`
    if test "$vers" -ge 11; then
        AC_MSG_RESULT(found)
    else
        AC_MSG_ERROR(You need at least libglade 0.11 for this version of Treehouse)
    fi
else
    AC_MSG_ERROR(Did not find libGlade installed)
fi

dnl Check for libghttp
AC_MSG_CHECKING(for ghttp libraries >= 1.0.0)
if gnome-config --libs ghttp > /dev/null 2>&1; then
    vers=`gnome-config --modversion ghttp | cut -c 7- | awk '{ print $1 * 100 }'`
    if test "$vers" -ge 100; then
      AC_MSG_RESULT(found)
    else
      AC_MSG_ERROR(You need at least libghttp 1.0.0 for this version of Treehouse)
    fi
else
    AC_MSG_ERROR(Did not find libghttp installed)
fi

dnl Checks for libraries.
AC_PATH_PROG(gnomepath, gnome-config)
GNOME_CFLAGS=`$gnomepath gnome gnomeui gtk gtkhtml ghttp --cflags 2>/dev/null`
GNOME_LIBS=`$gnomepath gnome gnomeui gtk gtkhtml ghttp --libs 2>/dev/null`
LIBGLADE_CFLAGS=`libglade-config --cflags`
LIBGLADE_LIBS=`libglade-config --libs`
GDK_PIXBUF_CFLAGS=`gdk-pixbuf-config --cflags`
GDK_PIXBUF_LIBS=`gdk-pixbuf-config --libs`
CFLAGS="$CFLAGS $GNOME_CFLAGS $LIBGLADE_CFLAGS $GDK_PIXBUF_CFLAGS"
LIBS="$LIBS $GNOME_LIBS $LIBGLADE_LIBS $GDK_PIXBUF_LIBS"

LIBS="$LIBS -lmysqlclient"
CPPFLAGS="${CPPFLAGS} -I/usr/include/mysql"
LDFLAGS="${LDFLAGS} -L/usr/lib/mysql"

dnl Only use -Wall if we have gcc
if test "x$GCC" = "xyes"; then
  if test -z "`echo "$CFLAGS" | grep "\-Wall" 2> /dev/null`" ; then
      CFLAGS="$CFLAGS -Wall"
  fi
fi

AC_ARG_WITH(debug,
[  --with-debug		  Switch on Treehouse's debugging],[
	CFLAGS="$CFLAGS -DDEBUG -g"],[
	CFLAGS="$CFLAGS -O3"])

AC_ARG_WITH(strict,
[  --with-strict		  Switch on gcc strict rules],[
	CFLAGS="$CFLAGS -ansi -pedantic"],[
	CFLAGS="$CFLAGS"])

AC_ARG_WITH(efence,
[  --with-efence		Link with Electric Fence],[
	LIBS="$LIBS -lefence"])

TREEHOUSE_VERSION="`pwd | sed 's/.*-//'`"
AC_SUBST(TREEHOUSE_VERSION)

AC_OUTPUT([
Makefile
macros/Makefile
src/Makefile
treehouse.spec
intl/Makefile
po/Makefile.in
]) 

